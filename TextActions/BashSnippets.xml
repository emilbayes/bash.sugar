<?xml version="1.0" encoding="UTF-8"?>
<action-recipes>

    <snippet id="org.purl.net.bash.snippets.shebang" category="tools.Snippets">
        <title>#!…</title>
        <!-- <text><![CDATA[#!/usr/bin/env ${1:${E_ROOT_ZONE/(?:source(?:code)?|.*)\.(?:(shell)|(\w+)).*/(?1:bash:$2)/}}
]]></text> -->
        <text><![CDATA[#!/bin/${1:bash}]]></text>
        <text-trigger>#!</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

    <snippet id="org.purl.net.bash.snippets.function" category="tools.Snippets">
        <title>function</title>
        <text><![CDATA[function ${1:function_name} () {
	${0:#statements}
}
]]></text>
        <text-trigger>fun</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

    <snippet id="org.purl.net.bash.snippets.if-block" category="tools.Snippets">
        <title>if block</title>
        <text><![CDATA[if ${2:[[ ${1:condition} ]]}; then
	${0:#statements}
fi]]></text>
        <text-trigger>if</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

    <snippet id="org.purl.net.bash.snippets.elif-block" category="tools.Snippets">
        <title>elif block</title>
        <text><![CDATA[elif ${2:[[ ${1:condition} ]]}; then
	${0:#statements}]]></text>
        <text-trigger>elif</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

    <snippet id="for-loop" category="tools.Snippets">
        <title>for loop</title>
        <text><![CDATA[for (( i = 0; i < ${1:10}; i++ )); do
	${0:#statements}
done]]></text>
        <text-trigger>for</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

    <snippet id="org.purl.net.bash.snippets.for-in-loop" category="tools.Snippets">
        <title>for…in loop</title>
        <text><![CDATA[for ${1:i}${2/.+/ in /}${2:words}; do
	${0:#statements}
done]]></text>
        <text-trigger>forin</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

    <snippet id="org.purl.net.bash.snippets.while-loop" category="tools.Snippets">
        <title>while loop</title>
        <text><![CDATA[while ${2:[[ ${1:condition} ]]}; do
	${0:#statements}
done]]></text>
        <text-trigger>while</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

    <snippet id="org.purl.net.bash.snippets.until-loop" category="tools.Snippets">
        <title>until loop</title>
        <text><![CDATA[until ${2:[[ ${1:condition} ]]}; do
	${0:#statements}
done]]></text>
        <text-trigger>until</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

    <snippet id="org.purl.net.bash.snippets.case-block" category="tools.Snippets">
        <title>case block</title>
        <text><![CDATA[case ${1:word} in
	${2:pattern} )
		$0;;
esac]]></text>
        <text-trigger>case</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

    <snippet id="org.purl.net.bash.snippets.here-doc" category="tools.Snippets">
        <title>here-document</title>
        <text><![CDATA[<<-${2:'${1:TOKEN}'}
	$0
${1/['"`](.+)['"`]/$1/}]]></text>
        <text-trigger>&lt;&lt;</text-trigger>
        <syntax-context>bash, bash *</syntax-context>
    </snippet>

</action-recipes>